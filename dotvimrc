"""""""""""""""""""" General
"""""" Reading
set nocompatible
set backspace=2
" set foldcolumn=1
set wrap
"" gj & gk: treat long lines as break lines
" map j gj

"" auto reload vimrc
" autocmd! bufwritepost .vimrc source ~/.vimrc

""" jump to the last position when reopening a file
if has("autocmd")
  au BufReadPost *
      \ if line("'\"") > 1 && line("'\"") <= line("$") |
      \     exe "normal! g'\"" |
      \ endif
endif

""" Resize
map - <C-W>-
map + <C-W>+
" map > <C-W>>
" map < <C-W><

""" status line
set laststatus=2
set statusline=\ %{HasPaste()}%<%(%f%)%m%r%h\ %w
set statusline+=\ \ %<%(%{CurDir()}%)
set statusline+=\ \ \ \ \ \ [%{&ff}/%Y] 
set statusline+=%=%-10.(%l,%c%V%)\ \ \ %p%%/%L
hi StatusLine ctermfg=gray ctermbg=black
hi StatusLineNC ctermfg=darkblue ctermbg=gray

"""""" Searching
set ignorecase
set smartcase
set incsearch
set hlsearch
"" for regexp
set magic
" vnoremap <silent> * :call VisualSelection('f')<CR>
" vnoremap <silent> # :call VisualSelection('b')<CR>

"""""" Editing
highlight TrailingWhitespace ctermbg=red guibg=red
match TrailingWhitespace /\s\+$/
highlight LineOverFlow ctermbg=red guibg=red ctermfg=white
match LineOverFlow /\%81v.\+/
""" Encoding
"" Use Unix as the standard file type
" set fileformats=unix,dos,mac
set encoding=utf-8
set termencoding=utf-8
set fileencoding=utf-8
set fileencodings=ucs-bom,utf-8,gbk,big5,latin1

""" Normally, we do not keep backup files
set nobackup
" set backup
" set backupdir=~/.vim/backup/

"" auto reload when file changed
" set ar


"""""""""""""""""""" Programming
"" filetype detection
filetype on
""" filetype-specific indenting
filetype indent on
filetype plugin on

""" syntax highlight
syntax on
set showmatch
set showmode

set autoindent
set smartindent

""" Tab
set expandtab
"" <BS> will delete a "sw" worth of space at the start of the line
set smarttab
set tabstop=4
set softtabstop=4
set shiftwidth=4

""" Folding
set foldenable
set foldmethod=marker
set foldlevel=0
set foldcolumn=0

"""""" Programming languages
let mapleader=";"
let g:mapleader=";"

" nnoremap <leader>w :call TrimTrailingWhitespace()<CR>

"""""" C/C++
set tags=tags
autocmd FileType c,cc,cpp setlocal cindent expandtab
autocmd FileType c setlocal shiftwidth=4 tabstop=4 softtabstop=4
autocmd FileType cc,cpp setlocal shiftwidth=2 tabstop=4 softtabstop=4
autocmd BufNewFile,BufRead *.h,*.hpp map <leader>g :call IncludeGuard()<CR>
" autocmd FileType cc,cpp setlocal tags+=~/.vim/tags/cpptags

""" OmniCppComplete
let OmniCpp_MayCompleteDot = 0
let OmniCpp_MayCompleteArrow = 0
let OmniCpp_MayCompleteScope = 0
" autocmd FileType cpp,cc set omnifunc=omni#cpp#complete#Main
" let OmniCpp_NamespaceSearch = 1
" let OmniCpp_GlobalScopeSearch = 1
" let OmniCpp_ShowAccess = 1
" let OmniCpp_ShowPrototypeInAbbr = 1
" let OmniCpp_MayCompleteDot = 1
" let OmniCpp_MayCompleteArrow = 1
" let OmniCpp_MayCompleteScope = 1
" let OmniCpp_DefaultNamespaces = ["std", "_GLIBCXX_STD"]
" set completeopt=menuone,menu,longest

" autocmd FileType c set omnifunc=ccomplete#Complete
set cot-=preview

"""""" Python
autocmd FileType python setlocal expandtab shiftwidth=4 tabstop=8 sts=4
"" `vim-indent-guides` does not work on vim 7.2, try `n<<` or `n>>`
autocmd FileType python setlocal foldmethod=indent foldlevel=99
" autocmd FileType python setlocal omnifunc=pythoncomplete#Complete
"" pydoc: <leader>pw
let g:pydoc_open_cmd = 'vsplit'

"""""" PHP
autocmd FileType php setlocal cindent expandtab sw=4 ts=8 softtabstop=4
autocmd FileType php setlocal makeprg=php\ -l\ %
autocmd FileType php setlocal errorformat=%m\ in\ %f\ on\ line\ %l
autocmd FileType php setlocal omnifunc=phpcomplete#CompletePHP

"""""" Javascript, etc
autocmd FileType javascript setlocal cindent expandtab sw=2 ts=8 sts=4
autocmd FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS

""" HTML
runtime macros/matchit.vim
autocmd FileType html,xhtml setlocal expandtab shiftwidth=2 tabstop=2 sts=2
autocmd FileType html setlocal omnifunc=htmlcomplete#CompleteTags

autocmd FileType css setlocal expandtab sw=2 tabstop=4 softtabstop=4
autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS


""""""""""""""""""" other plugins
"""""" Tagbar
nmap t :TagbarToggle<CR>
"" default to be right
let g:tagbar_left = 1
let g:tagbar_autofocus = 1
let g:tagbar_width = 30
"""""" NerdTree
nnoremap <leader>n :NERDTreeToggle<CR>
let g:NERDTreeWinPos = "right"  " default to be left
""" Close vim if the only window left open is the NERDTree
autocmd bufenter *
            \ if (winnr("$") == 1 && exists("b:NERDTreeType") &&
            \ b:NERDTreeType == "primary") | q | endif


""""""""""""""""""" Utility Functions
fun! HasPaste()
    if &paste
        return '[PASTE]'
    else
        return ''
    endif
endfun
fun! CurDir()
    let curdir = substitute(getcwd(), $HOME, "~", "")
    return curdir
endfun
fun! IncludeGuard()
    let basename = substitute(bufname(""), '/', '_', '')
    let guard = substitute(toupper(basename), '\.', '_', "H"). '_'
    call append(0, "#ifndef " . guard)
    call append(1, "#define " . guard)
    call append(line("$"), "#endif  // " . guard)
endfun
fun! TrimTrailingWhitespace()
    let l = line(".")
    let c = col(".")
    %s/\s\+$//g
    call cursor(l, c)
endfun
